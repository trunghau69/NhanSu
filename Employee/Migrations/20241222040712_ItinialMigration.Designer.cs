// <auto-generated />
using System;
using Employee.Models.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Employee.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241222040712_ItinialMigration")]
    partial class ItinialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Employee.Models.ChamCong", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("DiLam")
                        .HasColumnType("bit");

                    b.Property<TimeSpan>("GioRa")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("GioVao")
                        .HasColumnType("time");

                    b.Property<DateTime>("NgayChamCong")
                        .HasColumnType("datetime2");

                    b.Property<int>("NhanVienID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("NhanVienID");

                    b.ToTable("ChamCong", (string)null);
                });

            modelBuilder.Entity("Employee.Models.ChucVu", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("MaChucVu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .HasColumnType("ntext");

                    b.Property<string>("TenChucVu")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ID");

                    b.ToTable("ChucVu", (string)null);
                });

            modelBuilder.Entity("Employee.Models.ChuyenNganh", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("MaChuyenNganh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenChuyenNganh")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ID");

                    b.ToTable("ChuyenNganh", (string)null);
                });

            modelBuilder.Entity("Employee.Models.HopDong", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("MaHopDong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKy")
                        .HasColumnType("datetime2");

                    b.Property<int>("NhanVienID")
                        .HasColumnType("int");

                    b.Property<string>("NoiDung")
                        .HasColumnType("ntext");

                    b.Property<string>("TenHopDong")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ID");

                    b.HasIndex("NhanVienID");

                    b.ToTable("HopDong", (string)null);
                });

            modelBuilder.Entity("Employee.Models.KhenThuong", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("LyDoKhenThuong")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MaKhenThuong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("TienThuong")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.ToTable("KhenThuong", (string)null);
                });

            modelBuilder.Entity("Employee.Models.KyLuat", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("LyDoKyLuat")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MaKyLuat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("SoTienKyLuat")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.ToTable("KyLuat", (string)null);
                });

            modelBuilder.Entity("Employee.Models.Luong", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("KhenThuongID")
                        .HasColumnType("int");

                    b.Property<int>("KyLuatID")
                        .HasColumnType("int");

                    b.Property<int>("LuongCoBanID")
                        .HasColumnType("int");

                    b.Property<string>("LyDoKhenThuongID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LyDoKyLuatID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayThanhToan")
                        .HasColumnType("datetime2");

                    b.Property<int>("NhanVienID")
                        .HasColumnType("int");

                    b.Property<int>("ThangNhanID")
                        .HasColumnType("int");

                    b.Property<string>("TinhTrangLuong")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<float>("TongThuNhap")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.HasIndex("KhenThuongID");

                    b.HasIndex("KyLuatID");

                    b.HasIndex("NhanVienID");

                    b.ToTable("Luong", (string)null);
                });

            modelBuilder.Entity("Employee.Models.NghiPhep", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("LyDo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NhanVienID")
                        .HasColumnType("int");

                    b.Property<int>("SoNgay")
                        .HasColumnType("int");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("NhanVienID");

                    b.ToTable("NghiPhep", (string)null);
                });

            modelBuilder.Entity("Employee.Models.NguoiDung", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("EmailID")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MatKhau")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("NhanVienID")
                        .HasColumnType("int");

                    b.Property<int>("Quyen")
                        .HasColumnType("int");

                    b.Property<string>("TenDangNhap")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("NhanVienID");

                    b.ToTable("NguoiDung", (string)null);
                });

            modelBuilder.Entity("Employee.Models.NhanVien", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CanCuocCongDan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ChucVuID")
                        .HasColumnType("int");

                    b.Property<int>("ChuyenMonID")
                        .HasColumnType("int");

                    b.Property<int?>("ChuyenNganhID")
                        .HasColumnType("int");

                    b.Property<string>("DanToc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("HinhAnh")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MaNhanVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiO")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("PhongBanId")
                        .HasColumnType("int");

                    b.Property<string>("QueQuan")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("QuocTich")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("TenNhanVien")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TrinhDoID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ChucVuID");

                    b.HasIndex("ChuyenNganhID");

                    b.HasIndex("PhongBanId");

                    b.HasIndex("TrinhDoID");

                    b.ToTable("NhanVien", (string)null);
                });

            modelBuilder.Entity("Employee.Models.PhongBan", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("MaPhongBan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenPhongBan")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ID");

                    b.ToTable("PhongBan", (string)null);
                });

            modelBuilder.Entity("Employee.Models.TrinhDo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("MaTrinhDo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenTrinhDo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ID");

                    b.ToTable("TrinhDo", (string)null);
                });

            modelBuilder.Entity("Employee.Models.ChamCong", b =>
                {
                    b.HasOne("Employee.Models.NhanVien", "NhanVien")
                        .WithMany()
                        .HasForeignKey("NhanVienID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("Employee.Models.HopDong", b =>
                {
                    b.HasOne("Employee.Models.NhanVien", "NhanVien")
                        .WithMany()
                        .HasForeignKey("NhanVienID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("Employee.Models.Luong", b =>
                {
                    b.HasOne("Employee.Models.KhenThuong", "KhenThuong")
                        .WithMany("Luong")
                        .HasForeignKey("KhenThuongID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Employee.Models.KyLuat", "KyLuat")
                        .WithMany("Luong")
                        .HasForeignKey("KyLuatID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Employee.Models.NhanVien", "NhanVien")
                        .WithMany("Luong")
                        .HasForeignKey("NhanVienID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhenThuong");

                    b.Navigation("KyLuat");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("Employee.Models.NghiPhep", b =>
                {
                    b.HasOne("Employee.Models.NhanVien", "NhanVien")
                        .WithMany("NghiPhep")
                        .HasForeignKey("NhanVienID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("Employee.Models.NguoiDung", b =>
                {
                    b.HasOne("Employee.Models.NhanVien", null)
                        .WithMany("NguoiDung")
                        .HasForeignKey("NhanVienID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Employee.Models.NhanVien", b =>
                {
                    b.HasOne("Employee.Models.ChucVu", "ChucVu")
                        .WithMany("NhanVien")
                        .HasForeignKey("ChucVuID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Employee.Models.ChuyenNganh", "ChuyenNganh")
                        .WithMany("NhanVien")
                        .HasForeignKey("ChuyenNganhID");

                    b.HasOne("Employee.Models.PhongBan", "PhongBan")
                        .WithMany("NhanVien")
                        .HasForeignKey("PhongBanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Employee.Models.TrinhDo", "TrinhDo")
                        .WithMany("NhanVien")
                        .HasForeignKey("TrinhDoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChucVu");

                    b.Navigation("ChuyenNganh");

                    b.Navigation("PhongBan");

                    b.Navigation("TrinhDo");
                });

            modelBuilder.Entity("Employee.Models.ChucVu", b =>
                {
                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("Employee.Models.ChuyenNganh", b =>
                {
                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("Employee.Models.KhenThuong", b =>
                {
                    b.Navigation("Luong");
                });

            modelBuilder.Entity("Employee.Models.KyLuat", b =>
                {
                    b.Navigation("Luong");
                });

            modelBuilder.Entity("Employee.Models.NhanVien", b =>
                {
                    b.Navigation("Luong");

                    b.Navigation("NghiPhep");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("Employee.Models.PhongBan", b =>
                {
                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("Employee.Models.TrinhDo", b =>
                {
                    b.Navigation("NhanVien");
                });
#pragma warning restore 612, 618
        }
    }
}
